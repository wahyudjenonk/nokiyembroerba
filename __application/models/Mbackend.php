<?php if (!defined('BASEPATH')) {exit('No direct script access allowed');}class Mbackend extends CI_Model{	function __construct(){		parent::__construct();		//$this->auth = unserialize(base64_decode($this->session->userdata('n0k111a')));	}		function getdata($type="", $balikan="", $p1="", $p2="",$p3="",$p4=""){		$where = " WHERE 1=1 ";		if($this->input->post('kat')){			if($this->input->post('kat') == 'all'){				$table = $this->input->post('table');				$field = $this->db->list_fields($table);				$where .= " AND ( ";				foreach($field as $k => $v){					if($v == 'update_by' || $v == 'update_date'){						continue;					}					if ($k == reset($field)){						$where .= " A.".$v." like '%".$this->db->escape_str($this->input->post('key'))."%' ";					}elseif ($k == end($field)){						$where .= " A.".$v." like '%".$this->db->escape_str($this->input->post('key'))."%' ";					}else{						$where .= "OR A.".$v." like '%".$this->db->escape_str($this->input->post('key'))."%' ";					}				}				$where .= " ) ";			}else{				$where .=" AND A.".$this->input->post('kat')." like '%".$this->db->escape_str($this->input->post('key'))."%'";			}		}				switch($type){			case "data_login":				$sql = "					SELECT *					FROM tbl_user 					WHERE nama_user = '".$p1."'				";			break;			case "phase": 				$sql = "					SELECT A.*					FROM tbl_master_phase A					$where 				";							break;			case "potype": 				$sql = "					SELECT A.*					FROM tbl_master_potype A					$where				";			break;			case "pocurrency": 				$sql = "					SELECT A.*					FROM tbl_master_pocurrency A					$where				";			break;			case "region": 				$sql = "					SELECT A.*					FROM tbl_master_region A					$where				";			break;			case "sitename": 				$sql = "					SELECT A.*					FROM tbl_master_sitename A					$where				";			break;			case "pone": 				$sql = "					SELECT A.*					FROM tbl_master_pone A					$where				";			break;			case "masterpo": 				$sql = "					SELECT A.*, B.phase_code, B.phase_name, B.phase_year,						D.currency, C.po_type					FROM tbl_master_po A					LEFT JOIN tbl_master_phase B ON B.id = A.tbl_master_phase_id					LEFT JOIN tbl_master_potype C ON C.id = A.tbl_master_potype_id					LEFT JOIN tbl_master_pocurrency D ON D.id = A.tbl_master_currency_id					$where				";			break;			case "mastercr": 				$sql = "					SELECT A.*, B.phase_code, B.phase_name, B.phase_year					FROM tbl_master_cr A					LEFT JOIN tbl_master_phase B ON B.id = A.tbl_master_phase_id					$where				";			break;			case "uploadtracker":				$sql = "					SELECT A.*					FROM tbl_uploader_tracker A				";			break;			case "siteinfo":				$sql = "					SELECT A.*, B.phase_code, B.phase_name,						C.site_status, D.region_code, E.po_ne, F.id as uploader_id					FROM tbl_master_tracker_siteinfo A					LEFT JOIN tbl_master_phase B ON B.id = A.tbl_master_phase_id 					LEFT JOIN tbl_master_sitename C ON C.id = A.tbl_master_sitename_id					LEFT JOIN tbl_master_region D ON D.id = A.tbl_master_region_id					LEFT JOIN tbl_master_pone E ON E.id = A.tbl_master_pone_id					LEFT JOIN tbl_uploader_tracker F ON F.file_name = A.file_name					$where				";			break;			case "siteprogress":				$sql = "					SELECT A.*, 						B.site_id, B.site_name, B.sow_category,						C.site_status, D.region_code, E.po_ne, F.id as uploader_id					FROM tbl_master_tracker_siteprogress A					LEFT JOIN tbl_master_tracker_siteinfo B ON B.boqno /*siteinfo*/ = A.boqno					LEFT JOIN tbl_master_sitename C ON C.id = B.tbl_master_sitename_id					LEFT JOIN tbl_master_region D ON D.id = B.tbl_master_region_id						LEFT JOIN tbl_master_pone E ON E.id = B.tbl_master_pone_id					LEFT JOIN tbl_uploader_tracker F ON F.file_name = A.file_name					$where				";			break;			case "mcr":				$sql = "				SELECT A.*, 					B.site_id, B.site_name, B.sow_category,					C.site_status, D.region_code, E.po_ne, F.id as uploader_id				FROM tbl_master_tracker_mcr A				LEFT JOIN tbl_master_tracker_siteinfo B ON B.boqno /*siteinfo*/ = A.boqno				LEFT JOIN tbl_master_sitename C ON C.id = B.tbl_master_sitename_id				LEFT JOIN tbl_master_region D ON D.id = B.tbl_master_region_id					LEFT JOIN tbl_master_pone E ON E.id = B.tbl_master_pone_id				LEFT JOIN tbl_uploader_tracker F ON F.file_name = A.file_name				$where					";			break;			case "atf":				$sql = "					SELECT A.*, 					B.site_id, B.site_name, B.sow_category,					C.site_status, D.region_code, E.po_ne, F.id as uploader_id					FROM tbl_master_tracker_atf A					LEFT JOIN tbl_master_tracker_siteinfo B ON B.boqno /*siteinfo*/ = A.boqno					LEFT JOIN tbl_master_sitename C ON C.id = B.tbl_master_sitename_id					LEFT JOIN tbl_master_region D ON D.id = B.tbl_master_region_id						LEFT JOIN tbl_master_pone E ON E.id = B.tbl_master_pone_id					LEFT JOIN tbl_uploader_tracker F ON F.file_name = A.file_name					$where				";			break;			case "sitebinder":				$sql = "					SELECT A.*, 					B.site_id, B.site_name, B.sow_category,					C.site_status, D.region_code, E.po_ne, F.id as uploader_id					FROM tbl_master_tracker_sitebinder A					LEFT JOIN tbl_master_tracker_siteinfo B ON B.boqno /*siteinfo*/ = A.boqno					LEFT JOIN tbl_master_sitename C ON C.id = B.tbl_master_sitename_id					LEFT JOIN tbl_master_region D ON D.id = B.tbl_master_region_id						LEFT JOIN tbl_master_pone E ON E.id = B.tbl_master_pone_id					LEFT JOIN tbl_uploader_tracker F ON F.file_name = A.file_name					$where				";			break;			case "acceptanceclosing":				$sql = "					SELECT A.*, 					B.site_id, B.site_name, B.sow_category,					C.site_status, D.region_code, E.po_ne, F.id as uploader_id					FROM tbl_master_tracker_accclosing A					LEFT JOIN tbl_master_tracker_siteinfo B ON B.boqno /*siteinfo*/ = A.boqno					LEFT JOIN tbl_master_sitename C ON C.id = B.tbl_master_sitename_id					LEFT JOIN tbl_master_region D ON D.id = B.tbl_master_region_id						LEFT JOIN tbl_master_pone E ON E.id = B.tbl_master_pone_id					LEFT JOIN tbl_uploader_tracker F ON F.file_name = A.file_name					$where				";			break;			case "costsales":				$sql = "					SELECT A.*, 					B.site_id, B.site_name, B.sow_category,					C.site_status, D.region_code, E.po_ne, F.id as uploader_id					FROM tbl_master_tracker_costsales A					LEFT JOIN tbl_master_tracker_siteinfo B ON B.boqno /*siteinfo*/ = A.boqno					LEFT JOIN tbl_master_sitename C ON C.id = B.tbl_master_sitename_id					LEFT JOIN tbl_master_region D ON D.id = B.tbl_master_region_id						LEFT JOIN tbl_master_pone E ON E.id = B.tbl_master_pone_id					LEFT JOIN tbl_uploader_tracker F ON F.file_name = A.file_name					$where				";			break;			case "tracker_all":				$sql ="					SELECT A.*					FROM tbl_master_tracker_siteinfo A					LEFT JOIN tbl_master_tracker_siteprogress B ON B.boqno = A.boqno /*siteinfo */ AND B.tbl_master_tracker_siteinfo_id = A.id					$where				";			break;			case "uploadalldatabase":				$sql = "					SELECT A.*					FROM tbl_uploader_alldatabase A				";			break;			case "receivedall":			case "receiveddollar":			case "received":				$sql = "					SELECT A.*,						B.phase_code, B.phase_year, B.phase_name,						C.po_type,						D.po_no, D.project_name, D.basic_contract, E.currency,						F.cr_no_nokia, F.cr_status, G.id as uploader_id, G.type_database					FROM tbl_all_database A					LEFT JOIN tbl_master_phase B ON B.id = A.tbl_master_phase_id					LEFT JOIn tbl_master_potype C ON C.id = A.tbl_master_potype_id					LEFT JOIN tbl_master_po D ON D.id = A.tbl_master_po_id					LEFT JOIN tbl_master_pocurrency E ON E.id = D.tbl_master_currency_id					LEFT JOIN tbl_master_cr F ON F.id = A.tbl_master_cr_id					LEFT JOIN tbl_uploader_alldatabase G ON G.file_name = A.file_name					$where AND A.id_level_2 is null AND A.id_level_3 is null				";			break;			case "reservationall":			case "reservationdollar":			case "reservation":				$sql = "					SELECT A.*					FROM tbl_all_database A					$where AND A.id_level_2 is not null AND A.id_level_3 is null				";			break;		}				if($balikan == 'json'){			return $this->lib->json_grid($sql);		}elseif($balikan == 'row_array'){			return $this->db->query($sql)->row_array();		}elseif($balikan == 'result'){			return $this->db->query($sql)->result();		}elseif($balikan == 'result_array'){			return $this->db->query($sql)->result_array();		}			}		function get_combo($type="", $p1="", $p2=""){		switch($type){			case "tbl_master_phase":				$sql = "					SELECT A.id, CONCAT_WS('-', A.phase_code, A.phase_year) as txt					FROM $type A					WHERE A.status = '1'				";			break;			case "tbl_master_potype":				$sql = "					SELECT A.id, A.po_type as txt					FROM $type A					WHERE A.status = '1'				";			break;			case "tbl_master_pocurrency":				$sql = "					SELECT A.id, A.currency as txt					FROM $type A					WHERE A.status = '1'				";			break;			case "tbl_master_region":				$sql = "					SELECT A.id, A.region_code as txt					FROM $type A					WHERE A.status = '1'				";			break;			case "tbl_master_sitename":				$sql = "					SELECT A.id, A.site_status as txt					FROM $type A					WHERE A.status = '1'				";			break;			case "tbl_master_pone":				$sql = "					SELECT A.id, A.po_ne as txt					FROM $type A					WHERE A.status = '1'				";			break;		}				return $this->db->query($sql)->result_array();	}		function simpandata($table,$data,$sts_crud){ //$sts_crud --> STATUS NYEE INSERT, UPDATE, DELETE		$this->db->trans_begin();		if(isset($data['id'])){			$id = $data['id'];			unset($data['id']);		}				$data['update_by'] = $this->auth['nama_user']; 		$data['update_date'] = date('Y-m-d H:i:s'); 				switch($table){			case "tbl_master_phase":						break;			case "tbl_master_potype":							break;			case "tbl_master_pocurrency":							break;			case "tbl_master_region":							break;			case "tbl_master_sitename":							break;			case "tbl_master_pone":							break;			case "tbl_master_po":				$data['po_gross_usd'] = ($data['po_gross_idr'] / $data['jis_dorr_rate']);				$data['po_nett_usd'] = ($data['po_nett_idr'] / $data['jis_dorr_rate']);			break;			case "tbl_master_cr":							break;			case "tbl_master_tracker_siteinfo":							break;			case "tbl_master_tracker_siteprogress":							break;			case "tbl_master_tracker_mcr":							break;			case "tbl_master_tracker_atf":							break;			case "tbl_master_tracker_sitebinder":							break;			case "tbl_master_tracker_costsales";						break;			case "tbl_master_tracker_costsales";						break;			case "tbl_all_database";							break;		}				switch ($sts_crud){			case "add": 				$data['status'] = 1;				$this->db->insert($table,$data);			break;			case "edit":				$this->db->update($table, $data, array('id' => $id) );			break;			case "inactive":				$data['status'] = 0;				$this->db->update($table, $data, array('id' => $id) );			break;			case "activate":				$data['status'] = 1;				$this->db->update($table, $data, array('id' => $id) );			break;		}				if($this->db->trans_status() == false){			$this->db->trans_rollback();			return 'gagal';		}else{			 return $this->db->trans_commit();		}	}		function importdata($type=""){		$this->load->library("PHPExcel");		if(!empty($_FILES['file_import']['name'])){			//$this->db->trans_begin();						$ext = explode('.',$_FILES['file_import']['name']);			$exttemp = sizeof($ext) - 1;			$extension = $ext[$exttemp];						$upload_path = "./__repository/tmp_upload/";			$filen = $ext[0]."-".date('Ymd_His').".".$extension;			$filename =  $this->lib->uploadnong($upload_path, 'file_import', $filen);						$folder_aplod = $upload_path.$filename;			$cacheMethod   = PHPExcel_CachedObjectStorageFactory::cache_to_phpTemp;			$cacheSettings = array('memoryCacheSize' => '1600MB');			PHPExcel_Settings::setCacheStorageMethod($cacheMethod,$cacheSettings);			if($extension=='xls'){				$lib="Excel5";			}else{				$lib="Excel2007";			}						$objReader =  PHPExcel_IOFactory::createReader($lib);//excel2007			ini_set('max_execution_time', 123456);			//end set						$objPHPExcel = $objReader->load($folder_aplod); 			$objReader->setReadDataOnly(true);			$nama_sheet=$objPHPExcel->getSheetNames();			$worksheet = $objPHPExcel->setActiveSheetIndex(0);			$array_benar = array();			$array_salah = array();			$method = $this->input->post('methodupload');			$insertbatchstatus = true;						switch($type){				case "masterpo":					for($i=6; $i <= $worksheet->getHighestRow(); $i++){						$statusdata = true;						$arrayphasesalah = array();						$arraypotypesalah = array();						$arraycurrencysalah = array();						if($worksheet->getCell("B".$i)->getCalculatedValue() != ""){							$arrayphase = array(								'phase_code' => $worksheet->getCell("B".$i)->getCalculatedValue(),							);							$cekphase = $this->db->get_where('tbl_master_phase', $arrayphase)->row_array();							if(isset($cekphase)){								$tbl_master_phase_id = $cekphase['id'];							}else{								$statusdata = false;								$arrayphasesalah['phase_code'] = $worksheet->getCell("B".$i)->getCalculatedValue();								$arrayphasesalah['phase_name'] = $worksheet->getCell("D".$i)->getCalculatedValue();								$arrayphasesalah['phase_year'] = $worksheet->getCell("C".$i)->getCalculatedValue();							}						}						if($worksheet->getCell("E".$i)->getCalculatedValue() != ""){							$arraypotype = array(								'po_type' => $worksheet->getCell("E".$i)->getCalculatedValue(),							);							$cekpotype = $this->db->get_where('tbl_master_potype', $arraypotype)->row_array();							if(isset($cekpotype)){								$tbl_master_potype_id = $cekpotype['id'];							}else{								$statusdata = false;								$arraypotypesalah['po_type'] = $worksheet->getCell("E".$i)->getCalculatedValue();							}						}						if($worksheet->getCell("H".$i)->getCalculatedValue() != ""){							$arraycurrency = array(								'currency' => $worksheet->getCell("H".$i)->getCalculatedValue(),							);							$cekcurrency = $this->db->get_where('tbl_master_pocurrency', $arraycurrency)->row_array();							if(isset($cekcurrency)){								$tbl_master_currency_id = $cekcurrency['id'];							}else{								$statusdata = false;								$arraycurrencysalah['currency'] = $worksheet->getCell("H".$i)->getCalculatedValue();							}						}												if($statusdata == true){																					$podatet = $worksheet->getCell("J".$i)->getCalculatedValue();							$podatet = new DateTime("1899-12-30 + $podatet days");							$podate = $podatet->format('Y-m-d');														//$podatet = DateTime::createFromFormat('d/m/y', $worksheet->getCell("J".$i)->getCalculatedValue());							//$podate =  $podatet->format('Y-m-d');														$poreceivedt = $worksheet->getCell("K".$i)->getCalculatedValue();							$poreceivedt = new DateTime("1899-12-30 + $poreceivedt days");							$poreceived = $poreceivedt->format('Y-m-d');														$podeliveryt = $worksheet->getCell("L".$i)->getCalculatedValue();							$podeliveryt = new DateTime("1899-12-30 + $podeliveryt days");							$podelivery = $podeliveryt->format('Y-m-d');									$arrayinsertbenar = array(								'tbl_master_phase_id' => $tbl_master_phasester_phase_id,								'tbl_master_potype_id' => $tbl_master_potype_id,								'tbl_master_currency_id' => $tbl_master_currency_id,								'po_no' => $worksheet->getCell("F".$i)->getCalculatedValue(),								'project_name' => $worksheet->getCell("G".$i)->getCalculatedValue(),								'basic_contract' => $worksheet->getCell("I".$i)->getCalculatedValue(),								'po_date' => $podate,								'po_received' => $poreceived,								'po_delivery' => $podelivery,								'revision_no' => $worksheet->getCell("M".$i)->getCalculatedValue(),								'po_gross_idr' => $worksheet->getCell("N".$i)->getCalculatedValue(),								'po_nett_idr' => $worksheet->getCell("O".$i)->getCalculatedValue(),								'jis_dorr_rate' => $worksheet->getCell("P".$i)->getCalculatedValue(),								'po_gross_usd' => ($worksheet->getCell("N".$i)->getCalculatedValue() / $worksheet->getCell("P".$i)->getCalculatedValue()),								'po_nett_usd' => ($worksheet->getCell("O".$i)->getCalculatedValue() / $worksheet->getCell("P".$i)->getCalculatedValue()),								'po_nett_usd' => $worksheet->getCell("R".$i)->getCalculatedValue(),								'remarks' => $worksheet->getCell("S".$i)->getCalculatedValue(),								'file_name' => $filen,								'update_by' => $this->auth['nama_user'],								'update_date' => date('Y-m-d H:i:s'),								'status' => 1							);														if($method == 'N'){								array_push($array_benar, $arrayinsertbenar);							}elseif($method == 'U'){								$id = $worksheet->getCell("A".$i)->getCalculatedValue();								if($id){									$this->db->update('tbl_master_po', $arrayinsertbenar, array('id'=>$id) );								}							}						}else{							$arrayinsertsalah = array(								'row' => $i,								'phase' => $arrayphasesalah,								'potype' => $arraypotypesalah,								'currency' => $arraycurrencysalah							);							array_push($array_salah, $arrayinsertsalah);						}					}					$table = "tbl_master_po";									break;				case "mastercr":					for($i=6; $i <= $worksheet->getHighestRow(); $i++){						$statusdata = true;						$arrayphasesalah = array();						if($worksheet->getCell("E".$i)->getCalculatedValue() != ""){							$arrayphase = array(								'phase_code' => $worksheet->getCell("E".$i)->getCalculatedValue(),							);							$cekphase = $this->db->get_where('tbl_master_phase', $arrayphase)->row_array();							if(isset($cekphase)){								$tbl_master_phase_id = $cekphase['id'];							}else{								$statusdata = false;								$arrayphasesalah['phase_code'] = $worksheet->getCell("E".$i)->getCalculatedValue();								$arrayphasesalah['phase_name'] = $worksheet->getCell("F".$i)->getCalculatedValue();								$arrayphasesalah['phase_year'] = $worksheet->getCell("G".$i)->getCalculatedValue();							}						}												if($statusdata == true){							//$crsubmit 	= date_format(date_create_from_format('m/d/Y', $worksheet->getCell("K".$i)->getCalculatedValue()), 'Y-m-d');							//$crapproved = date_format(date_create_from_format('m/d/Y', $worksheet->getCell("L".$i)->getCalculatedValue()), 'Y-m-d');							//$poreceived = date_format(date_create_from_format('m/d/Y', $worksheet->getCell("M".$i)->getCalculatedValue()), 'Y-m-d');														$crsubmitt = $worksheet->getCell("K".$i)->getCalculatedValue();							$crsubmitt = new DateTime("1899-12-30 + $crsubmitt days");							$crsubmit = $crsubmitt->format('Y-m-d');														$crapprovedt = $worksheet->getCell("L".$i)->getCalculatedValue();							$crapprovedt = new DateTime("1899-12-30 + $crapprovedt days");							$crapproved = $crapprovedt->format('Y-m-d');														$poreceivedt = $worksheet->getCell("M".$i)->getCalculatedValue();							$poreceivedt = new DateTime("1899-12-30 + $poreceivedt days");							$poreceived = $poreceivedt->format('Y-m-d');														$arrayinsertbenar = array(								'tbl_master_phase_id' => $tbl_master_phase_id,								'cr_no_nokia' => $worksheet->getCell("B".$i)->getCalculatedValue(),								'cr_no_indosat' => $worksheet->getCell("C".$i)->getCalculatedValue(),								'cr_status' => $worksheet->getCell("D".$i)->getCalculatedValue(),								'nodin' => $worksheet->getCell("H".$i)->getCalculatedValue(),								'cr_position' => $worksheet->getCell("I".$i)->getCalculatedValue(),								'cr_pic' => $worksheet->getCell("J".$i)->getCalculatedValue(),								'cr_submit' => $crsubmit,								'cr_approved' => $crapproved,								'po_received' => $poreceived,								'value_before' => $worksheet->getCell("N".$i)->getCalculatedValue(),									'value_after' => $worksheet->getCell("O".$i)->getCalculatedValue(),								'value_delta' => ($worksheet->getCell("N".$i)->getCalculatedValue() - $worksheet->getCell("O".$i)->getCalculatedValue()),								'cr_type' => $worksheet->getCell("Q".$i)->getCalculatedValue(),								'remarks' => $worksheet->getCell("R".$i)->getCalculatedValue(),								'file_name' => $filen,								'update_by' => $this->auth['nama_user'],								'update_date' => date('Y-m-d H:i:s'),								'status' => 1							);														if($method == 'N'){								array_push($array_benar, $arrayinsertbenar);							}elseif($method == 'U'){								$id = $worksheet->getCell("A".$i)->getCalculatedValue();								if($id){									$this->db->update('tbl_master_cr', $arrayinsertbenar, array('id'=>$id) );								} 							}						}else{							$arrayinsertsalah = array(								'row' => $i,								'phase' => $arrayphasesalah							);							array_push($array_salah, $arrayinsertsalah);						}					}					$table = "tbl_master_cr";									break;				case "siteinfo":					$boquery = true;					$boqaseli = 1;					$arrayboq = array();					//echo $worksheet->getHighestRow();exit;					for($i=6; $i <= $worksheet->getHighestRow(); $i++){						if($worksheet->getCell("J".$i)->getCalculatedValue() != ""){							$statusdata = true;							$arrayphasesalah = array();							$arrayregionsalah = array();							$arraysitestatussalah = array();							$arrayponesalah = array();							if($worksheet->getCell("J".$i)->getCalculatedValue() != ""){								$arrayphase = array(									'phase_code' => $worksheet->getCell("J".$i)->getCalculatedValue(),								);								$cekphase = $this->db->get_where('tbl_master_phase', $arrayphase)->row_array();								if(isset($cekphase)){									$tbl_master_phase_id = $cekphase['id'];								}else{									$statusdata = false;									$arrayphasesalah['phase_code'] = $worksheet->getCell("J".$i)->getCalculatedValue();									$arrayphasesalah['phase_name'] = $worksheet->getCell("K".$i)->getCalculatedValue();								}							}							if($worksheet->getCell("G".$i)->getCalculatedValue() != ""){								$arrayregion = array(									'region_code' => $worksheet->getCell("G".$i)->getCalculatedValue(),								);								$cekregion = $this->db->get_where('tbl_master_region', $arrayregion)->row_array();								if(isset($cekregion)){									$tbl_master_region_id = $cekregion['id'];								}else{									$statusdata = false;									$arrayregionsalah['region_code'] = $worksheet->getCell("G".$i)->getCalculatedValue();								}							}							if($worksheet->getCell("F".$i)->getCalculatedValue() != ""){								$arraysitestatus = array(									'site_status' => $worksheet->getCell("F".$i)->getCalculatedValue(),								);								$ceksitestatus = $this->db->get_where('tbl_master_sitename', $arraysitestatus)->row_array();								if(isset($ceksitestatus)){									$tbl_master_sitename_id = $ceksitestatus['id'];								}else{									$statusdata = false;									$arraysitestatussalah['sitestatus'] = $worksheet->getCell("F".$i)->getCalculatedValue();								}							}							if($worksheet->getCell("P".$i)->getCalculatedValue() != ""){								$arrayponesalah = array(									'po_ne' => $worksheet->getCell("P".$i)->getCalculatedValue(),								);								$cekpone = $this->db->get_where('tbl_master_pone', $arrayponesalah)->row_array();								if(isset($cekpone)){									$tbl_master_pone_id = $cekpone['id'];								}else{									$statusdata = false;									$arrayponesalah['pone'] = $worksheet->getCell("P".$i)->getCalculatedValue();								}							}														if($statusdata == true){								if($method == 'N'){									if($boquery == true){										$sqlboq = "											SELECT MAX(boqmaxid) as boq_max											FROM tbl_master_tracker_siteinfo											WHERE tbl_master_phase_id = '".$tbl_master_phase_id."'										";																				$queryboq = $this->db->query($sqlboq)->row_array();										if($queryboq['boq_max'] != null){											$boqno = ($queryboq['boq_max'] + 1);											$boqno = $worksheet->getCell("J".$i)->getCalculatedValue()."".sprintf('%04d', $boqno);											$boqaseli = ($queryboq['boq_max'] + 1);										}else{											$boqaseli = 1;											$boqno = $worksheet->getCell("J".$i)->getCalculatedValue()."0001";										}																				$boquery = false;									}else{										$boqaseli = ($boqaseli + 1);										$boqno = $worksheet->getCell("J".$i)->getCalculatedValue()."".sprintf('%04d', $boqaseli);										$boquery = false;									}									$arrayinsertbenar = array(										'tbl_master_phase_id' => $tbl_master_phase_id,										'tbl_master_region_id' => $tbl_master_region_id,										'tbl_master_sitename_id' => $tbl_master_sitename_id,										'tbl_master_pone_id' => $tbl_master_pone_id,										'boqno' => $boqno,										'site_id' => $worksheet->getCell("C".$i)->getCalculatedValue(),										'site_name' => $worksheet->getCell("D".$i)->getCalculatedValue(),										'sow_category' => $worksheet->getCell("E".$i)->getCalculatedValue(),										'area_name' => $worksheet->getCell("H".$i)->getCalculatedValue(),										'cluster' => $worksheet->getCell("I".$i)->getCalculatedValue(),										'sow_detail' => $worksheet->getCell("L".$i)->getCalculatedValue(),										'system_key' => $worksheet->getCell("M".$i)->getCalculatedValue(),										'site_id_ori' => $worksheet->getCell("N".$i)->getCalculatedValue(),										'site_name_ori' => $worksheet->getCell("O".$i)->getCalculatedValue(),										'network_boq' => $worksheet->getCell("Q".$i)->getCalculatedValue(),										'wp_id_svc' => $worksheet->getCell("R".$i)->getCalculatedValue(),										'so_svc' => $worksheet->getCell("S".$i)->getCalculatedValue(),										'partner_ni' => $worksheet->getCell("T".$i)->getCalculatedValue(),										'partner_npo' => $worksheet->getCell("U".$i)->getCalculatedValue(),										'remarks_siteinfo' => $worksheet->getCell("V".$i)->getCalculatedValue(),																				'status' => 1,										'update_by' => $this->auth['nama_user'],										'update_date' => date('Y-m-d H:i:s'),										'file_name' => $filen,										'boqmaxid' => $boqaseli									);								}elseif($method == 'U'){									$boqno = $worksheet->getCell("B".$i)->getCalculatedValue();									$arrayinsertbenar = array(										'tbl_master_phase_id' => $tbl_master_phase_id,										'tbl_master_region_id' => $tbl_master_region_id,										'tbl_master_sitename_id' => $tbl_master_sitename_id,										'tbl_master_pone_id' => $tbl_master_pone_id,																				'site_id' => $worksheet->getCell("C".$i)->getCalculatedValue(),										'site_name' => $worksheet->getCell("D".$i)->getCalculatedValue(),										'sow_category' => $worksheet->getCell("E".$i)->getCalculatedValue(),										'area_name' => $worksheet->getCell("H".$i)->getCalculatedValue(),										'cluster' => $worksheet->getCell("I".$i)->getCalculatedValue(),										'sow_detail' => $worksheet->getCell("L".$i)->getCalculatedValue(),										'system_key' => $worksheet->getCell("M".$i)->getCalculatedValue(),										'site_id_ori' => $worksheet->getCell("N".$i)->getCalculatedValue(),										'site_name_ori' => $worksheet->getCell("O".$i)->getCalculatedValue(),										'network_boq' => $worksheet->getCell("Q".$i)->getCalculatedValue(),										'wp_id_svc' => $worksheet->getCell("R".$i)->getCalculatedValue(),										'so_svc' => $worksheet->getCell("S".$i)->getCalculatedValue(),										'partner_ni' => $worksheet->getCell("T".$i)->getCalculatedValue(),										'partner_npo' => $worksheet->getCell("U".$i)->getCalculatedValue(),										'remarks_siteinfo' => $worksheet->getCell("V".$i)->getCalculatedValue(),																				'status' => 1,										'update_by' => $this->auth['nama_user'],										'update_date' => date('Y-m-d H:i:s'),										'file_name' => $filen,										'boqmaxid' => $boqaseli									);								}																		/*$arrayinsertbenar = array(										'tbl_master_phase_id' => $tbl_master_phase_id,										'tbl_master_region_id' => $tbl_master_region_id,										'tbl_master_sitename_id' => $tbl_master_sitename_id,										'tbl_master_pone_id' => $tbl_master_pone_id,										'boqno' => $boqno,										'site_id' => $worksheet->getCell("C".$i)->getCalculatedValue(),										'site_name' => $worksheet->getCell("D".$i)->getCalculatedValue(),										'sow_category' => $worksheet->getCell("E".$i)->getCalculatedValue(),										'area_name' => $worksheet->getCell("H".$i)->getCalculatedValue(),										'cluster' => $worksheet->getCell("I".$i)->getCalculatedValue(),										'sow_detail' => $worksheet->getCell("L".$i)->getCalculatedValue(),										'system_key' => $worksheet->getCell("M".$i)->getCalculatedValue(),										'site_id_ori' => $worksheet->getCell("N".$i)->getCalculatedValue(),										'site_name_ori' => $worksheet->getCell("O".$i)->getCalculatedValue(),										'network_boq' => $worksheet->getCell("Q".$i)->getCalculatedValue(),										'wp_id_svc' => $worksheet->getCell("R".$i)->getCalculatedValue(),										'so_svc' => $worksheet->getCell("S".$i)->getCalculatedValue(),										'partner_ni' => $worksheet->getCell("T".$i)->getCalculatedValue(),										'partner_npo' => $worksheet->getCell("U".$i)->getCalculatedValue(),										'remarks_siteinfo' => $worksheet->getCell("V".$i)->getCalculatedValue(),																				'status' => 1,										'update_by' => $this->auth['nama_user'],										'update_date' => date('Y-m-d H:i:s'),										'file_name' => $filen,										'boqmaxid' => $boqaseli									); */								if($method == 'N'){									$arrayisiboq = array(										'boqno' => $boqno									);																		array_push($array_benar, $arrayinsertbenar);									array_push($arrayboq, $arrayisiboq);								}elseif($method == 'U'){									$id = $worksheet->getCell("A".$i)->getCalculatedValue();									if($id){										unset($arrayinsertbenar['boqmaxid']);										$this->db->update('tbl_master_tracker_siteinfo', $arrayinsertbenar, array('id'=>$id) );									}								}															}else{								$arrayinsertsalah = array(									'row' => $i,									'phase' => $arrayphasesalah,									'region' => $arrayregionsalah,									'sitestatus' => $arraysitestatussalah,									'pone' => $arrayponesalah,								);								array_push($array_salah, $arrayinsertsalah);							}						}					}										if(empty($array_salah)){						$arrayupload = array(							'type_tracker' => $type,							'file_name' => $filen,							'type_upload' => $method,							'remark' => $this->input->post('remark'),							'update_by' => $this->auth['nama_user'],							'update_date' => date('Y-m-d H:i:s')						);						$this->db->insert('tbl_uploader_tracker', $arrayupload);					}					if($method == 'U'){						if($statusdata == true) echo $statusdata;exit;					}					if(!empty($arrayboq)){						$this->db->insert_batch('tbl_master_tracker_siteprogress', $arrayboq);						$this->db->insert_batch('tbl_master_tracker_sitebinder', $arrayboq);						$this->db->insert_batch('tbl_master_tracker_mcr', $arrayboq);						$this->db->insert_batch('tbl_master_tracker_costsales', $arrayboq);						$this->db->insert_batch('tbl_master_tracker_atf', $arrayboq);						$this->db->insert_batch('tbl_master_tracker_accclosing', $arrayboq);					}										$table = "tbl_master_tracker_siteinfo";									break;				case "siteprogress":					for($i=6; $i <= $worksheet->getHighestRow(); $i++){						$statusdata = true;						$arraysiteinfosalah = array();						if($worksheet->getCell("B".$i)->getCalculatedValue() != ""){							$arraysiteinfo = array(								'boqno' => $worksheet->getCell("B".$i)->getCalculatedValue(),							);							$ceksiteinfo = $this->db->get_where('tbl_master_tracker_siteinfo', $arraysiteinfo)->row_array();							if(isset($ceksiteinfo)){								$on_air_datet = $worksheet->getCell("S".$i)->getCalculatedValue();								$on_air_datet = new DateTime("1899-12-30 + $on_air_datet days");								$on_air_date = $on_air_datet->format('Y-m-d');																$atp_datet = $worksheet->getCell("U".$i)->getCalculatedValue();								$atp_datet = new DateTime("1899-12-30 + $atp_datet days");								$atp_date = $atp_datet->format('Y-m-d');																$arrayinsertbenar =  array(									'boqno' => $worksheet->getCell("B".$i)->getCalculatedValue(),									'tbl_master_tracker_siteinfo_id' => $ceksiteinfo['id'],									'rfi' => $worksheet->getCell("I".$i)->getCalculatedValue(),									'tss' => $worksheet->getCell("J".$i)->getCalculatedValue(),									'mos' => $worksheet->getCell("K".$i)->getCalculatedValue(),									'installed' => $worksheet->getCell("L".$i)->getCalculatedValue(),									'g900' => $worksheet->getCell("M".$i)->getCalculatedValue(),									'g1800' => $worksheet->getCell("N".$i)->getCalculatedValue(),									'u2100' => $worksheet->getCell("O".$i)->getCalculatedValue(),									'u900' => $worksheet->getCell("P".$i)->getCalculatedValue(),									'l1800' => $worksheet->getCell("Q".$i)->getCalculatedValue(),									'on_air_baseline' => $worksheet->getCell("R".$i)->getCalculatedValue(),									'on_air_date' => $on_air_date,									'on_air_week' => $worksheet->getCell("T".$i)->getCalculatedValue(),									'atp_date' => $atp_date,									'atp_method' => $worksheet->getCell("V".$i)->getCalculatedValue(),									'indosat_pic' => $worksheet->getCell("X".$i)->getCalculatedValue(),									'status' => 1,									'file_name' => $filen,									'update_by' => $this->auth['nama_user'],									'update_date' => date('Y-m-d H:i:s'),								);								//$this->db->update('tbl_master_tracker_siteprogress', $arraysiteprogress, array('boqno'=>$worksheet->getCell("B".$i)->getCalculatedValue()) );								array_push($array_benar, $arrayinsertbenar);							}else{								$statusdata = false;								$arraysiteinfosalah['id'] = $worksheet->getCell("A".$i)->getCalculatedValue();								$arraysiteinfosalah['boqno'] = $worksheet->getCell("B".$i)->getCalculatedValue();							}														if($statusdata == false){								$arrayinsertsalah = array(									'row' => $i,									'siteinfo' => $arraysiteinfosalah,								);								array_push($array_salah, $arrayinsertsalah);							}						}					}										if($array_benar){						foreach($array_benar as $k => $v){							$this->db->update('tbl_master_tracker_siteprogress', $array_benar[$k], array('boqno'=>$v['boqno']) );						}												$arrayupload = array(							'type_tracker' => $type,							'file_name' => $filen,							'type_upload' => $method,							'remark' => $this->input->post('remark'),							'update_by' => $this->auth['nama_user'],							'update_date' => date('Y-m-d H:i:s')						);						$this->db->insert('tbl_uploader_tracker', $arrayupload);					}					$insertbatchstatus = false;				break;				case "mcr":					for($i=6; $i <= $worksheet->getHighestRow(); $i++){						$statusdata = true;						$arraysiteinfosalah = array();						if($worksheet->getCell("B".$i)->getCalculatedValue() != ""){							$arraysiteinfo = array(								'boq_no' => $worksheet->getCell("B".$i)->getCalculatedValue(),							);							$ceksiteinfo = $this->db->get_where('tbl_master_tracker_siteinfo', $arraysiteinfo)->row_array();							if(isset($ceksiteinfo)){								$alarm_submitt = $worksheet->getCell("I".$i)->getCalculatedValue();								$alarm_submitt = new DateTime("1899-12-30 + $alarm_submitt days");								$alarm_submit = $alarm_submitt->format('Y-m-d');																$alarm_approvedt = $worksheet->getCell("J".$i)->getCalculatedValue();								$alarm_approvedt = new DateTime("1899-12-30 + $alarm_approvedt days");								$alarm_approved = $alarm_approvedt->format('Y-m-d');																$ssv_fr_submitt = $worksheet->getCell("K".$i)->getCalculatedValue();								$ssv_fr_submitt = new DateTime("1899-12-30 + $ssv_fr_submitt days");								$ssv_fr_submit = $ssv_fr_submitt->format('Y-m-d');																$ssv_vr_approvedt = $worksheet->getCell("L".$i)->getCalculatedValue();								$ssv_vr_approvedt = new DateTime("1899-12-30 + $ssv_vr_approvedt days");								$ssv_vr_approved = $ssv_vr_approvedt->format('Y-m-d');																$ssv_frftr_submitt = $worksheet->getCell("M".$i)->getCalculatedValue();								$ssv_frftr_submitt = new DateTime("1899-12-30 + $ssv_frftr_submitt days");								$ssv_frftr_submit = $ssv_frftr_submitt->format('Y-m-d');																$ftr_srftr_approvedt = $worksheet->getCell("N".$i)->getCalculatedValue();								$ftr_srftr_approvedt = new DateTime("1899-12-30 + $ftr_srftr_approvedt days");								$ftr_srftr_approved = $ftr_srftr_approvedt->format('Y-m-d');																$pmr_lv_submitt = $worksheet->getCell("O".$i)->getCalculatedValue();								$pmr_lv_submitt = new DateTime("1899-12-30 + $pmr_lv_submitt days");								$pmr_lv_submit = $pmr_lv_submitt->format('Y-m-d');																$pmr_lv_approvedt = $worksheet->getCell("P".$i)->getCalculatedValue();								$pmr_lv_approvedt = new DateTime("1899-12-30 + $pmr_lv_approvedt days");								$pmr_lv_approved = $pmr_lv_approvedt->format('Y-m-d');																$rtwp_rssit = $worksheet->getCell("Q".$i)->getCalculatedValue();								$rtwp_rssit = new DateTime("1899-12-30 + $rtwp_rssit days");								$rtwp_rssi = $rtwp_rssit->format('Y-m-d');																$hn_submitt = $worksheet->getCell("R".$i)->getCalculatedValue();								$hn_submitt = new DateTime("1899-12-30 + $hn_submitt days");								$hn_submit = $hn_submitt->format('Y-m-d');																$hn_approvedt = $worksheet->getCell("S".$i)->getCalculatedValue();								$hn_approvedt = new DateTime("1899-12-30 + $hn_approvedt days");								$hn_approved = $hn_approvedt->format('Y-m-d');																$mcr_submitt = $worksheet->getCell("T".$i)->getCalculatedValue();								$mcr_submitt = new DateTime("1899-12-30 + $mcr_submitt days");								$mcr_submit = $mcr_submitt->format('Y-m-d');																$mcr_exitt = $worksheet->getCell("U".$i)->getCalculatedValue();								$mcr_exitt = new DateTime("1899-12-30 + $mcr_exitt days");								$mcr_exit = $mcr_exitt->format('Y-m-d');																$arrayinsertbenar =  array(									'boqno' => $worksheet->getCell("B".$i)->getCalculatedValue(),									'tbl_master_tracker_siteinfo_id' => $ceksiteinfo['id'],									'alarm_submit' => $alarm_submit,									'alarm_approved' => $alarm_approved,									'ssv_fr_submit' => $ssv_fr_submit,									'ssv_vr_approved' => $ssv_vr_approved,									'ssv_frftr_submit' => $ssv_frftr_submit,									'ftr_srftr_approved' => $ftr_srftr_approved,									'pmr_lv_submit' => $pmr_lv_submit,									'pmr_lv_approved' => $pmr_lv_approved,									'rtwp_rssi' => $rtwp_rssi,									'hn_submit' => $hn_submit,									'hn_approved' => $hn_approved,									'mcr_submit' => $mcr_submit,									'mcr_exit' => $mcr_exit,									'file_name' => $filen,									'status' => 1,									'update_by' => $this->auth['nama_user'],									'update_date' => date('Y-m-d H:i:s'),								);								//$this->db->update('tbl_master_tracker_siteprogress', $arraysiteprogress, array('boqno'=>$worksheet->getCell("B".$i)->getCalculatedValue()) );								array_push($array_benar, $arrayinsertbenar);							}else{								$statusdata = false;								$arraysiteinfosalah['id'] = $worksheet->getCell("A".$i)->getCalculatedValue();								$arraysiteinfosalah['boqno'] = $worksheet->getCell("B".$i)->getCalculatedValue();							}														if($statusdata == false){								$arrayinsertsalah = array(									'row' => $i,									'siteinfo' => $arraysiteinfosalah,								);								array_push($array_salah, $arrayinsertsalah);							}						}					}										if($array_benar){						foreach($array_benar as $k => $v){							$this->db->update('tbl_master_t`racker_mcr', $array_benar[$k], array('boqno'=>$v['boqno']) );						}												$arrayupload = array(							'type_tracker' => $type,							'filename' => $filen,							'type_upload' => $method,							'remark' => $this->input->post('remark'),							'update_by' => $this->auth['nama_user'],							'update_date' => date('Y-m-d H:i:s')						);						$this->db->insert('tbl_uploader_tracker', $arrayupload);					}					$insertbatchstatus = false;				break;				case "atf":					for($i=6; $i <= $worksheet->getHighestRow(); $i++){						$statusdata = true;						$arraysiteinfosalah = array();						if($worksheet->getCell("B".$i)->getCalculatedValue() != ""){							$arraysiteinfo = array(								'boq_no' => $worksheet->getCell("B".$i)->getCalculatedValue(),							);							$ceksiteinfo = $this->db->get_where('tbl_master_tracker_siteinfo', $arraysiteinfo)->row_array();							if(isset($ceksiteinfo)){								$atf_submitt = $worksheet->getCell("I".$i)->getCalculatedValue();								$atf_submitt = new DateTime("1899-12-30 + $atf_submitt days");								$atf_submit = $atf_submitt->format('Y-m-d');																$atf_approved1t = $worksheet->getCell("J".$i)->getCalculatedValue();								$atf_approved1t = new DateTime("1899-12-30 + $atf_approved1t days");								$atf_approved1 = $atf_approved1t->format('Y-m-d');																$dismantlet = $worksheet->getCell("K".$i)->getCalculatedValue();								$dismantlet = new DateTime("1899-12-30 + $dismantlet days");								$dismantle = $dismantlet->format('Y-m-d');																$material_pickupt = $worksheet->getCell("L".$i)->getCalculatedValue();								$material_pickupt = new DateTime("1899-12-30 + $material_pickupt days");								$material_pickup = $material_pickupt->format('Y-m-d');																$material_inbound_nokiat = $worksheet->getCell("M".$i)->getCalculatedValue();								$material_inbound_nokiat = new DateTime("1899-12-30 + $material_inbound_nokiat days");								$material_inbound_nokia = $material_inbound_nokiat->format('Y-m-d');																$material_inbound_isatt = $worksheet->getCell("N".$i)->getCalculatedValue();								$material_inbound_isatt = new DateTime("1899-12-30 + $material_inbound_isatt days");								$material_inbound_isat = $material_inbound_isatt->format('Y-m-d');																$atf_approved2t = $worksheet->getCell("O".$i)->getCalculatedValue();								$atf_approved2t = new DateTime("1899-12-30 + $atf_approved2t days");								$atf_approved2 = $atf_approved2t->format('Y-m-d');																$atf_closedt = $worksheet->getCell("P".$i)->getCalculatedValue();								$atf_closedt = new DateTime("1899-12-30 + $atf_closedt days");								$atf_closed = $atf_closedt->format('Y-m-d');																$arrayinsertbenar =  array(									'boqno' => $worksheet->getCell("B".$i)->getCalculatedValue(),									'tbl_master_tracker_siteinfo_id' => $ceksiteinfo['id'],									'atf_submit' => $atf_submit,									'atf_approved1' => $atf_approved1,									'dismantle' => $dismantle,									'material_pickup' => $material_pickup,									'material_inbound_nokia' => $material_inbound_nokia,									'material_inbound_isat' => $material_inbound_isat,									'atf_approved2' => $atf_approved2,									'atf_closed' => $atf_closed,									'status' => 1,									'file_name' => $filen,									'update_by' => $this->auth['nama_user'],									'update_date' => date('Y-m-d H:i:s'),								);								//$this->db->update('tbl_master_tracker_siteprogress', $arraysiteprogress, array('boqno'=>$worksheet->getCell("B".$i)->getCalculatedValue()) );								array_push($array_benar, $arrayinsertbenar);							}else{								$statusdata = false;								$arraysiteinfosalah['id'] = $worksheet->getCell("A".$i)->getCalculatedValue();								$arraysiteinfosalah['boqno'] = $worksheet->getCell("B".$i)->getCalculatedValue();							}														if($statusdata == false){								$arrayinsertsalah = array(									'row' => $i,									'siteinfo' => $arraysiteinfosalah,								);								array_push($array_salah, $arrayinsertsalah);							}						}					}										if($array_benar){						foreach($array_benar as $k => $v){							$this->db->update('tbl_master_tracker_atf', $array_benar[$k], array('boqno'=>$v['boqno']) );						}												$arrayupload = array(							'type_tracker' => $type,							'filename' => $filen,							'type_upload' => $method,							'remark' => $this->input->post('remark'),							'update_by' => $this->auth['nama_user'],							'update_date' => date('Y-m-d H:i:s')						);						$this->db->insert('tbl_uploader_tracker', $arrayupload);					}					$insertbatchstatus = false;				break;				case "sitebinder":					for($i=6; $i <= $worksheet->getHighestRow(); $i++){						$statusdata = true;						$arraysiteinfosalah = array();						if($worksheet->getCell("B".$i)->getCalculatedValue() != ""){							$arraysiteinfo = array(								'boq_no' => $worksheet->getCell("B".$i)->getCalculatedValue(),							);							$ceksiteinfo = $this->db->get_where('tbl_master_tracker_siteinfo', $arraysiteinfo)->row_array();							if(isset($ceksiteinfo)){								$doc_submitt = $worksheet->getCell("AC".$i)->getCalculatedValue();								$doc_submitt = new DateTime("1899-12-30 + $doc_submitt days");								$doc_submit = $doc_submitt->format('Y-m-d');																$doc_acceptt = $worksheet->getCell("AE".$i)->getCalculatedValue();								$doc_acceptt = new DateTime("1899-12-30 + $doc_acceptt days");								$doc_accept = $doc_acceptt->format('Y-m-d');																$mcr_exit_acceptt = $worksheet->getCell("AM".$i)->getCalculatedValue();								$mcr_exit_acceptt = new DateTime("1899-12-30 + $mcr_exit_acceptt days");								$mcr_exit_accept = $mcr_exit_acceptt->format('Y-m-d');																$endorse_submitt = $worksheet->getCell("AN".$i)->getCalculatedValue();								$endorse_submitt = new DateTime("1899-12-30 + $endorse_submitt days");								$endorse_submit = $endorse_submitt->format('Y-m-d');																$endorse_approvedt = $worksheet->getCell("AP".$i)->getCalculatedValue();								$endorse_approvedt = new DateTime("1899-12-30 + $endorse_approvedt days");								$endorse_approved = $endorse_approvedt->format('Y-m-d');																$dc_submitt = $worksheet->getCell("AR".$i)->getCalculatedValue();								$dc_submitt = new DateTime("1899-12-30 + $dc_submitt days");								$dc_submit = $dc_submitt->format('Y-m-d');								$dc_approvedt = $worksheet->getCell("AT".$i)->getCalculatedValue();								$dc_approvedt = new DateTime("1899-12-30 + $dc_approvedt days");								$dc_approved = $dc_approvedt->format('Y-m-d');																$arrayinsertbenar =  array(									'boqno' => $worksheet->getCell("B".$i)->getCalculatedValue(),									'tbl_master_tracker_siteinfo_id' => $ceksiteinfo['id'],									'10_lld_ndb' => $worksheet->getCell("P".$i)->getCalculatedValue(),									'22_tssr_pdf' => $worksheet->getCell("Q".$i)->getCalculatedValue(),									'23_sid_pdf' => $worksheet->getCell("R".$i)->getCalculatedValue(),									'50_boq_pdf' => $worksheet->getCell("S".$i)->getCalculatedValue(),									'56_atf_xls' => $worksheet->getCell("T".$i)->getCalculatedValue(),									'56_atf_pdf' => $worksheet->getCell("U".$i)->getCalculatedValue(),									'57_atp_functional' => $worksheet->getCell("V".$i)->getCalculatedValue(),									'57_atp_physical' => $worksheet->getCell("W".$i)->getCalculatedValue(),									'61_redline_pdf' => $worksheet->getCell("X".$i)->getCalculatedValue(),									'62_bd_dwg' => $worksheet->getCell("Y".$i)->getCalculatedValue(),									'63_abd_pdf' => $worksheet->getCell("Z".$i)->getCalculatedValue(),									'xx_others' => $worksheet->getCell("AA".$i)->getCalculatedValue(),									'xx_others2' => $worksheet->getCell("AB".$i)->getCalculatedValue(),									'doc_submit' => $doc_submit,									'reviewer' => $worksheet->getCell("AD".$i)->getCalculatedValue(),									'doc_accept' => $doc_accept,									'doc_status' => $worksheet->getCell("AF".$i)->getCalculatedValue(),									'70_ssv' => $worksheet->getCell("AG".$i)->getCalculatedValue(),									'71_rssi' => $worksheet->getCell("AH".$i)->getCalculatedValue(),									'73_pmr' => $worksheet->getCell("AI".$i)->getCalculatedValue(),									'74_alarm_log' => $worksheet->getCell("AJ".$i)->getCalculatedValue(),									'xx_others3' => $worksheet->getCell("AK".$i)->getCalculatedValue(),									'xx_others4' => $worksheet->getCell("AL".$i)->getCalculatedValue(),									'mcr_exit_accept' => $mcr_exit_accept,									'endorse_submit' => $endorse_submit,									'approver' => $worksheet->getCell("AO".$i)->getCalculatedValue(),									'endorse_approved' => $endorse_approved,									'endorse_status' => $worksheet->getCell("AQ".$i)->getCalculatedValue(),									'dc_submit' => $dc_submit,									'dc_reviewer' => $worksheet->getCell("AS".$i)->getCalculatedValue(),									'dc_approved' => $dc_approved,									'dc_status' => $worksheet->getCell("AU".$i)->getCalculatedValue(),									'oa_to_atp' => $worksheet->getCell("AV".$i)->getCalculatedValue(),									'atp_to_submit' => $worksheet->getCell("AW".$i)->getCalculatedValue(),									'submit_to_accept' => $worksheet->getCell("AX".$i)->getCalculatedValue(),									'accept_to_endorse' => $worksheet->getCell("AY".$i)->getCalculatedValue(),									'endorse_to_dc_approved' => $worksheet->getCell("AZ".$i)->getCalculatedValue(),									'remarks' => $worksheet->getCell("BA".$i)->getCalculatedValue(),									'status' => 1,									'file_name' => $filen,									'update_by' => $this->auth['nama_user'],									'update_date' => date('Y-m-d H:i:s'),								);								//$this->db->update('tbl_master_tracker_siteprogress', $arraysiteprogress, array('boqno'=>$worksheet->getCell("B".$i)->getCalculatedValue()) );								array_push($array_benar, $arrayinsertbenar);							}else{								$statusdata = false;								$arraysiteinfosalah['id'] = $worksheet->getCell("A".$i)->getCalculatedValue();								$arraysiteinfosalah['boqno'] = $worksheet->getCell("B".$i)->getCalculatedValue();							}														if($statusdata == false){								$arrayinsertsalah = array(									'row' => $i,									'siteinfo' => $arraysiteinfosalah,								);								array_push($array_salah, $arrayinsertsalah);							}						}					}										if($array_benar){						foreach($array_benar as $k => $v){							$this->db->update('tbl_master_tracker_siteprogress', $array_benar[$k], array('boqno'=>$v['boqno']) );						}												$arrayupload = array(							'type_tracker' => $type,							'filename' => $filen,							'type_upload' => $method,							'remark' => $this->input->post('remark'),							'update_by' => $this->auth['nama_user'],							'update_date' => date('Y-m-d H:i:s')						);						$this->db->insert('tbl_uploader_tracker', $arrayupload);					}					$insertbatchstatus = false;				break;				case "costsales":					for($i=6; $i <= $worksheet->getHighestRow(); $i++){						$statusdata = true;						$arraysiteinfosalah = array();						if($worksheet->getCell("B".$i)->getCalculatedValue() != ""){							$arraysiteinfo = array(								'boq_no' => $worksheet->getCell("B".$i)->getCalculatedValue(),							);							$ceksiteinfo = $this->db->get_where('tbl_master_tracker_siteinfo', $arraysiteinfo)->row_array();							if(isset($ceksiteinfo)){																$arrayinsertbenar =  array(									'boqno' => $worksheet->getCell("B".$i)->getCalculatedValue(),									'tbl_master_tracker_siteinfo_id' => $ceksiteinfo['id'],									'pac_baseline' => $worksheet->getCell("M".$i)->getCalculatedValue(),									'delay_no_onair' => $worksheet->getCell("O".$i)->getCalculatedValue(),									'delay_on_days' => $worksheet->getCell("P".$i)->getCalculatedValue(),									'delay_no_pac' => $worksheet->getCell("Q".$i)->getCalculatedValue(),									'delay_on_days2' => $worksheet->getCell("R".$i)->getCalculatedValue(),									'target_sales' => $worksheet->getCell("S".$i)->getCalculatedValue(),									'actual_sales' => $worksheet->getCell("T".$i)->getCalculatedValue(),									'target_cost' => $worksheet->getCell("U".$i)->getCalculatedValue(),									'actual_cost' => $worksheet->getCell("V".$i)->getCalculatedValue(),									'remarks' => $worksheet->getCell("W".$i)->getCalculatedValue(),									'file_name' => $filen,									'update_by' => $this->auth['nama_user'],									'update_date' => date('Y-m-d H:i:s'),								);								//$this->db->update('tbl_master_tracker_siteprogress', $arraysiteprogress, array('boqno'=>$worksheet->getCell("B".$i)->getCalculatedValue()) );								array_push($array_benar, $arrayinsertbenar);							}else{								$statusdata = false;								$arraysiteinfosalah['id'] = $worksheet->getCell("A".$i)->getCalculatedValue();								$arraysiteinfosalah['boqno'] = $worksheet->getCell("B".$i)->getCalculatedValue();							}														if($statusdata == false){								$arrayinsertsalah = array(									'row' => $i,									'siteinfo' => $arraysiteinfosalah,								);								array_push($array_salah, $arrayinsertsalah);							}						}					}										if($array_benar){						foreach($array_benar as $k => $v){							$this->db->update('tbl_master_tracker_costsales', $array_benar[$k], array('boqno'=>$v['boqno']) );						}												$arrayupload = array(							'type_tracker' => $type,							'filename' => $filen,							'type_upload' => $method,							'remark' => $this->input->post('remark'),							'update_by' => $this->auth['nama_user'],							'update_date' => date('Y-m-d H:i:s')						);						$this->db->insert('tbl_uploader_tracker', $arrayupload);					}					$insertbatchstatus = false;				break;				case "received":					for($i=6; $i <= $worksheet->getHighestRow(); $i++){						$statusdata = true;						$arrayphasesalah = array();						$arraypotypesalah = array();						$arrayponosalah = array();						$arraycrnosalah = array();						if($worksheet->getCell("E".$i)->getCalculatedValue() != ""){							$arrayphase = array(								'phase_code' => $worksheet->getCell("E".$i)->getCalculatedValue(),							);							$cekphase = $this->db->get_where('tbl_master_phase', $arrayphase)->row_array();							if(isset($cekphase)){								$tbl_master_phase_id = $cekphase['id'];							}else{								$statusdata = false;								$arrayphasesalah['phase_code'] = $worksheet->getCell("E".$i)->getCalculatedValue();								$arrayphasesalah['phase_name'] = $worksheet->getCell("F".$i)->getCalculatedValue();								$arrayphasesalah['phase_year'] = $worksheet->getCell("G".$i)->getCalculatedValue();							}						}						if($worksheet->getCell("H".$i)->getCalculatedValue() != ""){								$arraypotype = array(									'po_type' => $worksheet->getCell("H".$i)->getCalculatedValue(),								);								$cekpotype = $this->db->get_where('tbl_master_potype', $arraypotype)->row_array();								if(isset($cekpotype)){									$tbl_master_potype_id = $cekpotype['id'];								}else{									$statusdata = false;									$arraypotypesalah['po_type'] = $worksheet->getCell("H".$i)->getCalculatedValue();								}						}						if($worksheet->getCell("K".$i)->getCalculatedValue() != ""){								$arraypono = array(									'po_no' => $worksheet->getCell("K".$i)->getCalculatedValue(),								);								$cekpono = $this->db->get_where('tbl_master_po', $arraypono)->row_array();								if(isset($cekpono)){									$tbl_master_po_id = $cekpono['id'];								}else{									$statusdata = false;									$arrayponosalah['po_no'] = $worksheet->getCell("K".$i)->getCalculatedValue();								}						}						if($worksheet->getCell("BR".$i)->getCalculatedValue() != ""){								$arraycrno = array(									'cr_no_nokia' => $worksheet->getCell("BR".$i)->getCalculatedValue(),								);								$cekcrno = $this->db->get_where('tbl_master_cr', $arraycrno)->row_array();								if(isset($cekcrno)){									$tbl_master_cr_id = $cekcrno['id'];								}else{									$statusdata = false;									$arraycrnosalah['cr_no_nokia'] = $worksheet->getCell("BR".$i)->getCalculatedValue();								}						}													if($statusdata == true){							$arrayinsertbenar = array(								'tbl_master_phase_id' => $tbl_master_phase_id,								'tbl_master_potype_id' => $tbl_master_potype_id,								'tbl_master_po_id' => $tbl_master_po_id,								'tbl_master_cr_id' => $tbl_master_cr_id,								'pr_number' => $worksheet->getCell("I".$i)->getCalculatedValue(),								'pr_line_item' => $worksheet->getCell("J".$i)->getCalculatedValue(),								'purchasing_group' => $worksheet->getCell("M".$i)->getCalculatedValue(),								'document_type' => $worksheet->getCell("N".$i)->getCalculatedValue(),								'vendor_account_number' => $worksheet->getCell("O".$i)->getCalculatedValue(),								'contact_person' => $worksheet->getCell("P".$i)->getCalculatedValue(),								'term_of_payment' => $worksheet->getCell("Q".$i)->getCalculatedValue(),									'incoterms_code' => $worksheet->getCell("R".$i)->getCalculatedValue(),								'incoterms_location' => $worksheet->getCell("S".$i)->getCalculatedValue(),								'implementer' => $worksheet->getCell("U".$i)->getCalculatedValue(),								'manager' => $worksheet->getCell("V".$i)->getCalculatedValue(),								'document_text_free_text_notes' => $worksheet->getCell("W".$i)->getCalculatedValue(),								'collective_no' => $worksheet->getCell("X".$i)->getCalculatedValue(),								'discount_type_header' => $worksheet->getCell("Y".$i)->getCalculatedValue(),								'discount_amount_percentage_header' => $worksheet->getCell("Z".$i)->getCalculatedValue(),								'line_item' => $worksheet->getCell("AA".$i)->getCalculatedValue(),								'requester' => $worksheet->getCell("AB".$i)->getCalculatedValue(),								'rfx_auction_number' => $worksheet->getCell("AC".$i)->getCalculatedValue(),									'contract_number' => $worksheet->getCell("AD".$i)->getCalculatedValue(),								'account_assignment_category' => $worksheet->getCell("AE".$i)->getCalculatedValue(),								'item_category' => $worksheet->getCell("AF".$i)->getCalculatedValue(),								'tax_code' => $worksheet->getCell("AG".$i)->getCalculatedValue(),								'material_number' => $worksheet->getCell("AH".$i)->getCalculatedValue(),								'short_text' => $worksheet->getCell("AI".$i)->getCalculatedValue(),								'item_text' => $worksheet->getCell("AJ".$i)->getCalculatedValue(),								'limit' => $worksheet->getCell("AK".$i)->getCalculatedValue(),								'materials_quantity' => $worksheet->getCell("AL".$i)->getCalculatedValue(),								'material_price' => $worksheet->getCell("AM".$i)->getCalculatedValue(),								'material_group' => $worksheet->getCell("AN".$i)->getCalculatedValue(),									'plant' => $worksheet->getCell("AO".$i)->getCalculatedValue(),								'delivery_date' => $worksheet->getCell("AP".$i)->getCalculatedValue(),								'require_gr' => $worksheet->getCell("AQ".$i)->getCalculatedValue(),								'invoice_receipt' => $worksheet->getCell("AR".$i)->getCalculatedValue(),								'discount_type_item' => $worksheet->getCell("AS".$i)->getCalculatedValue(),								'amount_percentage_item' => $worksheet->getCell("AT".$i)->getCalculatedValue(),								'indicator' => $worksheet->getCell("AU".$i)->getCalculatedValue(),								'assigned_to_line_item' => $worksheet->getCell("AV".$i)->getCalculatedValue(),								'service_number' => $worksheet->getCell("AW".$i)->getCalculatedValue(),								'services_quantity' => $worksheet->getCell("AX".$i)->getCalculatedValue(),								'gross_price' => $worksheet->getCell("AY".$i)->getCalculatedValue(),									'gl_account_number' => $worksheet->getCell("AZ".$i)->getCalculatedValue(),								'business_area' => $worksheet->getCell("BA".$i)->getCalculatedValue(),								'cost_center' => $worksheet->getCell("BB".$i)->getCalculatedValue(),								'wbs' => $worksheet->getCell("BC".$i)->getCalculatedValue(),								'internal_order' => $worksheet->getCell("BD".$i)->getCalculatedValue(),								'assets_number' => $worksheet->getCell("BE".$i)->getCalculatedValue(),								'network_number' => $worksheet->getCell("BF".$i)->getCalculatedValue(),								'activity_number' => $worksheet->getCell("BG".$i)->getCalculatedValue(),								'assigned_to_line_item2' => $worksheet->getCell("BH".$i)->getCalculatedValue(),								'invoicing_plan_date' => $worksheet->getCell("BI".$i)->getCalculatedValue(),								'percentage_to_be_invoiced' => $worksheet->getCell("BJ".$i)->getCalculatedValue(),								'values_to_be_invoiced' => $worksheet->getCell("BK".$i)->getCalculatedValue(),								'buyer' => $worksheet->getCell("BL".$i)->getCalculatedValue(),								'actual_qty' => $worksheet->getCell("BN".$i)->getCalculatedValue(),									'delta_qty' => $worksheet->getCell("BO".$i)->getCalculatedValue(),								'status_cr_qty' => $worksheet->getCell("BP".$i)->getCalculatedValue(),								'remarkscr' => $worksheet->getCell("BQ".$i)->getCalculatedValue(),								'material_gross_price' => $worksheet->getCell("BT".$i)->getCalculatedValue(),								'material_nett_price' => $worksheet->getCell("BU".$i)->getCalculatedValue(),								'total_gross_price' => $worksheet->getCell("BV".$i)->getCalculatedValue(),								'total_nett_price' => $worksheet->getCell("BW".$i)->getCalculatedValue(),								'total_net_actual' => $worksheet->getCell("BX".$i)->getCalculatedValue(),								'total_net_delta' => $worksheet->getCell("BY".$i)->getCalculatedValue(),										'file_name' => $filen,								'update_by' => $this->auth['nama_user'],								'update_date' => date('Y-m-d H:i:s'),								'status' => 1							);														if($method == 'N'){								array_push($array_benar, $arrayinsertbenar);							}elseif($method == 'U'){								$id = $worksheet->getCell("A".$i)->getCalculatedValue();								if($id){									$this->db->update('tbl_all_database', $arrayinsertbenar, array('id'=>$id) );								} 							}						}else{							$arrayinsertsalah = array(								'row' => $i,								'phase' => $arrayphasesalah,								'potype' => $arraypotypesalah,								'masterpo' => $arrayponosalah,								'mastercr' => $arraycrnosalah,							);							array_push($array_salah, $arrayinsertsalah);						}					}					if(empty($array_salah)){						$arrayupload = array(							'type_database' => $type,							'file_name' => $filen,							'type_upload' => $method,							'remarks' => $this->input->post('remark'),							'update_by' => $this->auth['nama_user'],							'update_date' => date('Y-m-d H:i:s'),							'status' => 1						);						$this->db->insert('tbl_uploader_alldatabase', $arrayupload);					}					if($method == 'U'){						if($statusdata == true) echo $statusdata;exit;					}										$table = "tbl_all_database";									break;				case "reservation":					for($i=6; $i <= $worksheet->getHighestRow(); $i++){						$statusdata = true;						$arrayreservationsalah = array();						$arraypotypesalah = array();						$arrayponosalah = array();						$arraycrnosalah = array();						if($worksheet->getCell("E".$i)->getCalculatedValue() != ""){							$arrayphase = array(								'phase_code' => $worksheet->getCell("E".$i)->getCalculatedValue(),							);							$cekphase = $this->db->get_where('tbl_master_phase', $arrayphase)->row_array();							if(isset($cekphase)){								$tbl_master_phase_id = $cekphase['id'];							}else{								$statusdata = false;								$arrayphasesalah['phase_code'] = $worksheet->getCell("E".$i)->getCalculatedValue();								$arrayphasesalah['phase_name'] = $worksheet->getCell("F".$i)->getCalculatedValue();								$arrayphasesalah['phase_year'] = $worksheet->getCell("G".$i)->getCalculatedValue();							}						}						if($worksheet->getCell("H".$i)->getCalculatedValue() != ""){								$arraypotype = array(									'po_type' => $worksheet->getCell("H".$i)->getCalculatedValue(),								);								$cekpotype = $this->db->get_where('tbl_master_potype', $arraypotype)->row_array();								if(isset($cekpotype)){									$tbl_master_potype_id = $cekpotype['id'];								}else{									$statusdata = false;									$arraypotypesalah['po_type'] = $worksheet->getCell("H".$i)->getCalculatedValue();								}						}						if($worksheet->getCell("K".$i)->getCalculatedValue() != ""){								$arraypono = array(									'po_no' => $worksheet->getCell("K".$i)->getCalculatedValue(),								);								$cekpono = $this->db->get_where('tbl_master_po', $arraypono)->row_array();								if(isset($cekpono)){									$tbl_master_po_id = $cekpono['id'];								}else{									$statusdata = false;									$arrayponosalah['po_no'] = $worksheet->getCell("K".$i)->getCalculatedValue();								}						}						if($worksheet->getCell("BR".$i)->getCalculatedValue() != ""){								$arraycrno = array(									'cr_no_nokia' => $worksheet->getCell("BR".$i)->getCalculatedValue(),								);								$cekcrno = $this->db->get_where('tbl_master_cr', $arraycrno)->row_array();								if(isset($cekcrno)){									$tbl_master_cr_id = $cekcrno['id'];								}else{									$statusdata = false;									$arraycrnosalah['cr_no_nokia'] = $worksheet->getCell("BR".$i)->getCalculatedValue();								}						}													if($statusdata == true){							$arrayinsertbenar = array(								'tbl_master_phase_id' => $tbl_master_phase_id,								'tbl_master_potype_id' => $tbl_master_potype_id,								'tbl_master_po_id' => $tbl_master_po_id,								'tbl_master_tracker_siteinfo_id' => $tbl_master_tracker_siteinfo_id,								'pr_number' => $worksheet->getCell("I".$i)->getCalculatedValue(),								'pr_line_item' => $worksheet->getCell("J".$i)->getCalculatedValue(),								'purchasing_group' => $worksheet->getCell("M".$i)->getCalculatedValue(),								'document_type' => $worksheet->getCell("N".$i)->getCalculatedValue(),								'vendor_account_number' => $worksheet->getCell("O".$i)->getCalculatedValue(),								'contact_person' => $worksheet->getCell("P".$i)->getCalculatedValue(),								'term_of_payment' => $worksheet->getCell("Q".$i)->getCalculatedValue(),									'incoterms_code' => $worksheet->getCell("R".$i)->getCalculatedValue(),								'incoterms_location' => $worksheet->getCell("S".$i)->getCalculatedValue(),								'implementer' => $worksheet->getCell("U".$i)->getCalculatedValue(),								'manager' => $worksheet->getCell("V".$i)->getCalculatedValue(),								'document_text_free_text_notes' => $worksheet->getCell("W".$i)->getCalculatedValue(),								'collective_no' => $worksheet->getCell("X".$i)->getCalculatedValue(),								'discount_type_header' => $worksheet->getCell("Y".$i)->getCalculatedValue(),								'discount_amount_percentage_header' => $worksheet->getCell("Z".$i)->getCalculatedValue(),								'line_item' => $worksheet->getCell("AA".$i)->getCalculatedValue(),								'requester' => $worksheet->getCell("AB".$i)->getCalculatedValue(),								'rfx_auction_number' => $worksheet->getCell("AC".$i)->getCalculatedValue(),									'contract_number' => $worksheet->getCell("AD".$i)->getCalculatedValue(),								'account_assignment_category' => $worksheet->getCell("AE".$i)->getCalculatedValue(),								'item_category' => $worksheet->getCell("AF".$i)->getCalculatedValue(),								'tax_code' => $worksheet->getCell("AG".$i)->getCalculatedValue(),								'material_number' => $worksheet->getCell("AH".$i)->getCalculatedValue(),								'short_text' => $worksheet->getCell("AI".$i)->getCalculatedValue(),								'item_text' => $worksheet->getCell("AJ".$i)->getCalculatedValue(),								'limit' => $worksheet->getCell("AK".$i)->getCalculatedValue(),								'materials_quantity' => $worksheet->getCell("AL".$i)->getCalculatedValue(),								'material_price' => $worksheet->getCell("AM".$i)->getCalculatedValue(),								'material_group' => $worksheet->getCell("AN".$i)->getCalculatedValue(),									'plant' => $worksheet->getCell("AO".$i)->getCalculatedValue(),								'delivery_date' => $worksheet->getCell("AP".$i)->getCalculatedValue(),								'require_gr' => $worksheet->getCell("AQ".$i)->getCalculatedValue(),								'invoice_receipt' => $worksheet->getCell("AR".$i)->getCalculatedValue(),								'discount_type_item' => $worksheet->getCell("AS".$i)->getCalculatedValue(),								'amount_percentage_item' => $worksheet->getCell("AT".$i)->getCalculatedValue(),								'indicator' => $worksheet->getCell("AU".$i)->getCalculatedValue(),								'assigned_to_line_item' => $worksheet->getCell("AV".$i)->getCalculatedValue(),								'service_number' => $worksheet->getCell("AW".$i)->getCalculatedValue(),								'services_quantity' => $worksheet->getCell("AX".$i)->getCalculatedValue(),								'gross_price' => $worksheet->getCell("AY".$i)->getCalculatedValue(),									'gl_account_number' => $worksheet->getCell("AZ".$i)->getCalculatedValue(),								'business_area' => $worksheet->getCell("BA".$i)->getCalculatedValue(),								'cost_center' => $worksheet->getCell("BB".$i)->getCalculatedValue(),								'wbs' => $worksheet->getCell("BC".$i)->getCalculatedValue(),								'internal_order' => $worksheet->getCell("BD".$i)->getCalculatedValue(),								'assets_number' => $worksheet->getCell("BE".$i)->getCalculatedValue(),								'network_number' => $worksheet->getCell("BF".$i)->getCalculatedValue(),								'activity_number' => $worksheet->getCell("BG".$i)->getCalculatedValue(),								'assigned_to_line_item2' => $worksheet->getCell("BH".$i)->getCalculatedValue(),								'invoicing_plan_date' => $worksheet->getCell("BI".$i)->getCalculatedValue(),								'percentage_to_be_invoiced' => $worksheet->getCell("BJ".$i)->getCalculatedValue(),								'values_to_be_invoiced' => $worksheet->getCell("BK".$i)->getCalculatedValue(),								'buyer' => $worksheet->getCell("BL".$i)->getCalculatedValue(),								'actual_qty' => $worksheet->getCell("BN".$i)->getCalculatedValue(),									'delta_qty' => $worksheet->getCell("BO".$i)->getCalculatedValue(),								'status_cr_qty' => $worksheet->getCell("BP".$i)->getCalculatedValue(),								'remarkscr' => $worksheet->getCell("BQ".$i)->getCalculatedValue(),								'material_gross_price' => $worksheet->getCell("BT".$i)->getCalculatedValue(),								'material_nett_price' => $worksheet->getCell("BU".$i)->getCalculatedValue(),								'total_gross_price' => $worksheet->getCell("BV".$i)->getCalculatedValue(),								'total_nett_price' => $worksheet->getCell("BW".$i)->getCalculatedValue(),								'total_net_actual' => $worksheet->getCell("BX".$i)->getCalculatedValue(),								'total_net_delta' => $worksheet->getCell("BY".$i)->getCalculatedValue(),								'plan_qty_mapping' => $worksheet->getCell("CF".$i)->getCalculatedValue(),								'aqtual_qty_mapping' => $worksheet->getCell("CG".$i)->getCalculatedValue(),								'delta_qty_mapping' => $worksheet->getCell("CH".$i)->getCalculatedValue(),								'status_cr_qty_mapping' => $worksheet->getCell("CI".$i)->getCalculatedValue(),								'status_cr_reloc_mapping' => $worksheet->getCell("CJ".$i)->getCalculatedValue(),								'remarks_cr_mapping' => $worksheet->getCell("CK".$i)->getCalculatedValue(),								'remarks_cr_reloc_mapping' => $worksheet->getCell("CL".$i)->getCalculatedValue(),								'total_gross_price_mapping' => $worksheet->getCell("CM".$i)->getCalculatedValue(),								'total_nett_price_mapping' => $worksheet->getCell("CN".$i)->getCalculatedValue(),								'total_nett_actual_mapping' => $worksheet->getCell("CO".$i)->getCalculatedValue(),								'total_net_delta_mapping' => $worksheet->getCell("CP".$i)->getCalculatedValue(),										'file_name' => $filen,								'update_by' => $this->auth['nama_user'],								'update_date' => date('Y-m-d H:i:s'),								'status' => 1							);														if($method == 'N'){								array_push($array_benar, $arrayinsertbenar);							}elseif($method == 'U'){								$id = $worksheet->getCell("A".$i)->getCalculatedValue();								if($id){									$this->db->update('tbl_all_database', $arrayinsertbenar, array('id'=>$id) );								} 							}						}else{							$arrayinsertsalah = array(								'row' => $i,								'phase' => $arrayphasesalah,								'potype' => $arraypotypesalah,								'masterpo' => $arrayponosalah,								'mastercr' => $arraycrnosalah,							);							array_push($array_salah, $arrayinsertsalah);						}					}					if(empty($array_salah)){						$arrayupload = array(							'type_database' => $type,							'file_name' => $filen,							'type_upload' => $method,							'remarks' => $this->input->post('remark'),							'update_by' => $this->auth['nama_user'],							'update_date' => date('Y-m-d H:i:s'),							'status' => 1						);						$this->db->insert('tbl_uploader_alldatabase', $arrayupload);					}					if($method == 'U'){						if($statusdata == true) echo $statusdata;exit;					}										$table = "tbl_all_database";									break;			}						//echo count($array_salah);exit;			//echo "<pre>";			//print_r($array_salah);exit;				if(count($array_salah) != 0){					return $array_salah;					//exit;				}else{					if($array_benar){						if($insertbatchstatus == true){								$this->db->insert_batch($table, $array_benar);						}						return 1;					}else{						return 0;					}				}						/*			if($this->db->trans_status() == false){				$this->db->trans_rollback();				return 0;			}else{				return $this->db->trans_commit();			}			*/					}			}	}